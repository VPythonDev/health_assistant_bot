from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from src.fsm import CreateNoteState, DeleteNoteState, MenuState, NotesState
from src.keyboard_buttons.cancel_kb_btns import cancel_kb
from src.keyboard_buttons.menu_kb_btns import menu_kb
from src.models.user_class import User
from src.my_routers import router


@router.message(NotesState.waiting_for_choice)
async def notes_msg_handler(message: Message, state: FSMContext) -> None:
    user_id = message.from_user.id
    user_choice = message.text

    user = User.get_user(user_id)
    user_full_name = user.full_name

    if user_choice == "–°–æ–∑–¥–∞–π –∑–∞–º–µ—Ç–∫—É":
        may_word = "–ú–æ–∂–µ—à—å" if user_full_name else "–ú–æ–∂–µ—Ç–µ"

        await state.set_state(CreateNoteState.waiting_for_text)
        await message.answer(f"–¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ 2000 —Å–∏–º–≤–æ–ª–æ–≤. {may_word} –ø–∏—Å–∞—Ç—å")
    elif user_choice == "–£–¥–∞–ª–∏ –∑–∞–º–µ—Ç–∫—É":
        write_word = "–ù–∞–ø–∏—à–∏" if user_full_name else "–ù–∞–ø–∏—à–∏—Ç–µ"

        await state.set_state(DeleteNoteState.waiting_for_number)
        await message.answer(f"{write_word} –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏", reply_markup=cancel_kb)
    elif user_choice == "üîô–ù–∞–∑–∞–¥":
        await state.set_state(MenuState.waiting_for_choice)
        await message.answer("–ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?", reply_markup=menu_kb)
