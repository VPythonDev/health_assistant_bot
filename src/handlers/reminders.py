from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from src.fsm import (CreateReminderState, DeleteReminderState, MenuState,
                     RemindersState)
from src.keyboard_buttons.cancel_kb_btns import cancel_kb
from src.keyboard_buttons.menu_kb_btns import menu_kb
from src.models.user_class import User
from src.my_routers import router


@router.message(RemindersState.waiting_for_choice)
async def reminders_msg_handler(message: Message, state: FSMContext) -> None:
    user_id = message.from_user.id
    user_choice = message.text

    user = User.get_user(user_id)
    user_full_name = user.full_name

    if user_choice == "–°–æ–∑–¥–∞–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ":
        you_word = "—Ç–µ–±–µ" if user_full_name else "–≤–∞–º"

        await state.set_state(CreateReminderState.waiting_for_text)
        await message.answer(f"–ß—Ç–æ {you_word} –Ω–∞–ø–æ–º–Ω–∏—Ç—å? (–Ω–µ –±–æ–ª—å—à–µ 300 —Å–∏–º–≤–æ–ª–æ–≤)")
    elif user_choice == "–£–¥–∞–ª–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ":
        write_word = "–ù–∞–ø–∏—à–∏" if user_full_name else "–ù–∞–ø–∏—à–∏—Ç–µ"

        await state.set_state(DeleteReminderState.waiting_for_number)
        await message.answer(f"{write_word} –Ω–æ–º–µ—Ä –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", reply_markup=cancel_kb)
    elif user_choice == "üîô–ù–∞–∑–∞–¥":
        await state.set_state(MenuState.waiting_for_choice)
        await message.answer("–ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?", reply_markup=menu_kb)
