import asyncio

from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from utils.database_manager import db
from utils.fsm import MenuState, RegistrationState
from utils.keyboard_buttons.anonymity_kb_btns import anonymity_kb
from utils.keyboard_buttons.menu_kb_btns import menu_kb
from utils.my_routers import router
from utils.user_class import User


@router.message(CommandStart())
async def command_start_handler(message: Message, state: FSMContext) -> None:
    user_id = message.from_user.id

    try:
        is_registered = await db.check_registration(user_id)
        if is_registered:
            try:
                full_name, gender, reminders_number, notes_number = await db.get_user_data(user_id)

                User(user_id, full_name, gender)

                # Change state for menu
                await state.set_state(MenuState.waiting_for_choice)

                # Greeting
                if full_name:
                    await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {full_name}!", reply_markup=menu_kb)
                else:
                    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", reply_markup=menu_kb)
            except Exception:
                await message.answer("üòµ–Ø –Ω–µ –º–æ–≥—É —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
        else:
            await message.answer(
                "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∑–¥–æ—Ä–æ–≤—å—é. –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–ª–µ–¥–∏—Ç—å –∑–∞ –≤–∞—à–∏–º –∑–¥–æ—Ä–æ–≤—å–µ–º, –ø–æ–∫–∞ –≤—ã "
                "–∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –¥–µ–ª–∞–º–∏")

            # Pause between messages
            await asyncio.sleep(5)
            await message.answer("–í–∏–∂—É –≤—ã –∑–¥–µ—Å—å –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑. –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —è "
                                 "—Å—Ç–∞–ª –≤–∞—à–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ "
                                 "–≤–æ–ø—Ä–æ—Å")

            await state.set_state(RegistrationState.waiting_for_anonymity)
            await message.answer("–í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º?", reply_markup=anonymity_kb)
    except Exception:
        await message.answer(f"üòµ–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∞—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
